services:
  traefik:
    image: traefik:v2.10
    container_name: paservices_traefik # Use a shared name if running on the same machine
    restart: unless-stopped
    command:
      - "--api.insecure=true" # Use true for debugging, false for production
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-your-email@example.com}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # For Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificates:/letsencrypt
    networks:
      - web

  super_id_service:
    build:
      context: . # Build from the current directory (super_id_service)
      dockerfile: Dockerfile.prod # Use the new production Dockerfile
    image: your-docker-repo/super-id-service:prod # Replace with your image name
    container_name: super_id_service_prod
    restart: unless-stopped
    env_file:
      - .env.prod
    networks:
      - web
      - internal
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      # This router will direct traffic for superid.yourdomain.com
      - "traefik.http.routers.super-id.rule=Host(`${SUPER_ID_SERVICE_DOMAIN:-superid.example.com}`)"
      - "traefik.http.routers.super-id.entrypoints=websecure"
      - "traefik.http.routers.super-id.tls.certresolver=letsencrypt"
      - "traefik.http.services.super-id.loadbalancer.server.port=8000"

  redis:
    image: redis:7-alpine
    container_name: paservices_redis # Shared Redis container
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - internal

networks:
  web:
    name: paservices_web_network
  internal:
    name: paservices_internal_network

volumes:
  redis-data:
  traefik-certificates:
